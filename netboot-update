#!/bin/bash

ARCHES="i386 amd64"

debian_mirror="debian.osuosl.org"
debian_codenames="lenny squeeze"
debian_arches=$ARCHES

ubuntu_mirror="us.archive.ubuntu.com"
ubuntu_codenames="hardy intrepid karmic lucid maverick"
ubuntu_arches=$ARCHES

tftpdir=/var/lib/tftpboot
log=/var/log/$(basename $0).log

download_netboot()
{
    dest_file=$1
    source_url=$2

    if [ -f "$dest_file" ]; then
        checksum="$(md5sum $dest_file)"
        curl_opts="-z $dest_file"
    else
        curl_opts=""
        checksum=""
    fi

    echo checking for updates: $source_url >> $log
    # -z and -R make it only download the file if it is newer than the existing
    curl $source_url -o $dest_file -R --silent $curl_opts

    new_checksum="$(md5sum $dest_file)"
    if [ "$checksum" = "$new_checksum" ]; then
        return 1
    fi
    echo updated: $dest_file >> $log
    return 0
}

unpack_netboot(){
    dest_dir=$1
    dest_file=$2
    dist=$3
    tmp=$(mktemp -d)
    cd $tmp
    tar xzpf $dest_file || return 1
    rm -rf $dest_dir.old 
    mv -f $dest_dir $dest_dir.old 
    mv ${dist}-installer/* $dest_dir || return 1
    echo updated: $dest_dir >> $log
    rm -rf $tmp
    return 0
}

update_netboot(){
    DIST=$1
    CODENAME=$2
    ARCH=$3
    MIRROR=$4
    base_dir="$tftpdir/${DIST}-installer"
    destination_dir="$base_dir/${CODENAME}-${ARCH}"
    destination_file="$base_dir/${CODENAME}.${ARCH}.netboot.tar.gz"
    case $MIRROR in
        http://*) source_url="$MIRROR" ;;
        *) source_url="http://${MIRROR}/${DIST}/dists/${CODENAME}/main/installer-${ARCH}/current/images/netboot/netboot.tar.gz" ;;
    esac

    mkdir -p $destination_dir
    if download_netboot $destination_file $source_url ; then
        unpack_netboot $destination_dir $destination_file $DIST || echo failed to unpack $destination_file | tee -a $log >&2
    fi
}

echo starting $(date) >> $log

for CODENAME in $debian_codenames ; do
    for ARCH in $debian_arches ; do
        update_netboot debian $CODENAME $ARCH $debian_mirror >> $log
    done
done

# GUI gtk image for lenny
update_netboot debian lenny-gtk i386 http://$debian_mirror/debian/dists/lenny/main/installer-i386/current/images/netboot/gtk/netboot.tar.gz >> $log

# daily images
update_netboot debian daily i386 http://people.debian.org/~joeyh/d-i/images/daily/netboot/netboot.tar.gz >> $log

for CODENAME in $ubuntu_codenames ; do
    for ARCH in $ubuntu_arches ; do
        update_netboot ubuntu $CODENAME $ARCH $ubuntu_mirror >> $log
    done
done

download_powerpc(){
    DIST=$1
    CODENAME=$2
    ARCH=$3
    MIRROR=$4
    base_dir="$tftpdir/${DIST}-installer"
    destination_dir="$base_dir/${CODENAME}-${ARCH}"
    mkdir -p $destination_dir

    # powerpc doesn't have a netboot.tar.gz, and it also contains sub-arches, 
    # so download vmlinux and initrd.gz manually
    for filename in vmlinux initrd.gz ; do
        download_netboot $destination_dir/$filename $MIRROR/$filename
    done
}

download_powerpc debian lenny powerpc http://$debian_mirror/debian/dists/lenny/main/installer-powerpc/current/images/powerpc/netboot/ >> $log
download_powerpc debian squeeze powerpc http://$debian_mirror/debian/dists/squeeze/main/installer-powerpc/current/images/powerpc/netboot/ >> $log
download_powerpc debian daily powerpc http://d-i.debian.org/daily-images/powerpc/daily/powerpc/netboot/ >> $log

# jaunty's powerpc image
download_powerpc ubuntu jaunty powerpc http://ports.ubuntu.com/dists/jaunty/main/installer-powerpc/current/images/powerpc/netboot/ >> $log
# jaunty's powerpc64 image
download_powerpc ubuntu jaunty powerpc64 http://ports.ubuntu.com/dists/jaunty/main/installer-powerpc/current/images/powerpc64/netboot/ >> $log
# lucid powerpc image
download_powerpc ubuntu lucid powerpc http://ports.ubuntu.com/dists/lucid/main/installer-powerpc/current/images/powerpc/netboot/ >> $log
# hardy powerpc image
download_powerpc ubuntu hardy powerpc http://ports.ubuntu.com/dists/hardy/main/installer-powerpc/current/images/powerpc/netboot/ >> $log

echo finished $(date) >> $log
