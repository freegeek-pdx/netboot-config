# /etc/sdm/sdm.config
# if present, /etc/sdm/sdm.config.$hostname will override these values

# autologin will attempt to automatically log in
autologin=no

# username for login. defaults to hostname.
user=

# set hostname
if [ -n "$SDM_USERNAME" ]; then
  hostname $SDM_USERNAME
fi

# ssh key to use for passwordless login. must have permissions set to u+rw
# and og-rwx. must be configured in the user's .ssh/authorized_keys file
# on the server.
key=/etc/sdm/anon_key

# the name of the server.  must be present in the terminal's /etc/hosts 
# file, as well as an appropriate entry in the /root/.ssh/known_hosts
server=ryukin

# alternate server to use for anonymous logins
anon_server=gimpy

# window manager or other command to execute.
command=

# ssh options. -X is needed for X11 forwarding, sdm's magic bean.
sshopts="-X -T"

case $(echo $LOCALDEV | tr 'A-Z' 'a-z') in
  y|yes|true) 
    sshopts="$sshopts -M -S /var/run/ldm_socket"
    ;;
esac

# default X server, such as /usr/bin/X11/X-lessdisks for lessdisks.
# /usr/bin/X11/X is the default.
xserver=

# options that are passed to xsetroot, which controls the
# background color and/or images
xsetroot="-solid black"

# login text, defaults to "Welcome to $server"
login_text="Welcome to Freegeek\n$(hostname)"

# icons must be in xpm format
login_icon=/etc/sdm/freegeek_small.xpm

# sdm-session.  could also set to /etc/X11/Xsession
sdmsession=sdm-session

SSH_ASKPASS=/usr/bin/sdm-ssh-askpass

# justification: -center, -left, -right
justify="-left"

# custom getLogin
#getLogin() {
#  if [ -x "$(which Xdialog)" ]; then
#    user_wm_server=$(Xdialog --stdout $icon --3inputsbox \
#      "$login_text" 0 0 username "$user" "window manager" \
#      "$command" server "$server")

#    status="$?"
#    case $status in
#      0) ;;
#      1) xmessage -center "login cancelled. $status"
#        echo "login cancelled. $status"
#        exit 1 ;;
#      255) xmessage -center "login failed, misconfigured getLogin function? $status"
#        echo "login failed, misconfigured getLogin function? $status"
#        exit 1 ;;
#    esac

#    user=$(echo $user_wm_server | cut -d / -f 1)
#    command=$(echo $user_wm_server | cut -d / -f 2)
#    server=$(echo $user_wm_server | cut -d / -f 3)
#  fi
#}
